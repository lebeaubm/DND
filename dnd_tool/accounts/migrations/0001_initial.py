# Generated by Django 5.1.4 on 2024-12-31 22:03

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="BasicMonster",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, unique=True)),
                ("size", models.CharField(blank=True, max_length=50, null=True)),
                ("type", models.CharField(blank=True, max_length=50, null=True)),
                ("alignment", models.CharField(blank=True, max_length=50, null=True)),
                ("armor_class", models.IntegerField(default=0)),
                ("hit_points", models.IntegerField(default=0)),
                ("speed", models.CharField(blank=True, max_length=100, null=True)),
                ("strength", models.IntegerField(default=0)),
                ("dexterity", models.IntegerField(default=0)),
                ("constitution", models.IntegerField(default=0)),
                ("intelligence", models.IntegerField(default=0)),
                ("wisdom", models.IntegerField(default=0)),
                ("charisma", models.IntegerField(default=0)),
                ("strength_mod", models.IntegerField(default=0)),
                ("dexterity_mod", models.IntegerField(default=0)),
                ("constitution_mod", models.IntegerField(default=0)),
                ("intelligence_mod", models.IntegerField(default=0)),
                ("wisdom_mod", models.IntegerField(default=0)),
                ("charisma_mod", models.IntegerField(default=0)),
                (
                    "saving_throws",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("skills", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "damage_resistances",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "damage_immunities",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "condition_immunities",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("senses", models.CharField(blank=True, max_length=255, null=True)),
                ("languages", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "challenge_rating",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
                ("traits", models.TextField(blank=True, null=True)),
                ("actions", models.TextField(blank=True, null=True)),
                ("reactions", models.TextField(blank=True, null=True)),
                ("legendary_actions", models.TextField(blank=True, null=True)),
                ("image_url", models.URLField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="Monster",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("size", models.CharField(blank=True, max_length=50, null=True)),
                ("type", models.CharField(blank=True, max_length=50, null=True)),
                ("alignment", models.CharField(blank=True, max_length=50, null=True)),
                ("armor_class", models.IntegerField(blank=True, null=True)),
                ("hit_points", models.IntegerField(blank=True, null=True)),
                ("speed", models.CharField(blank=True, max_length=100, null=True)),
                ("strength", models.IntegerField(blank=True, null=True)),
                ("dexterity", models.IntegerField(blank=True, null=True)),
                ("constitution", models.IntegerField(blank=True, null=True)),
                ("intelligence", models.IntegerField(blank=True, null=True)),
                ("wisdom", models.IntegerField(blank=True, null=True)),
                ("charisma", models.IntegerField(blank=True, null=True)),
                ("saving_throws", models.TextField(blank=True, null=True)),
                ("damage_resistances", models.TextField(blank=True, null=True)),
                ("damage_immunities", models.TextField(blank=True, null=True)),
                ("condition_immunities", models.TextField(blank=True, null=True)),
                ("senses", models.TextField(blank=True, null=True)),
                ("languages", models.TextField(blank=True, null=True)),
                (
                    "challenge_rating",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
                ("abilities", models.TextField(blank=True, null=True)),
                ("actions", models.TextField(blank=True, null=True)),
                ("reactions", models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="CharacterSheet",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("class_name", models.CharField(blank=True, max_length=100, null=True)),
                (
                    "level",
                    models.PositiveIntegerField(blank=True, default=1, null=True),
                ),
                ("race", models.CharField(blank=True, max_length=100, null=True)),
                ("alignment", models.CharField(blank=True, max_length=50, null=True)),
                (
                    "hit_points",
                    models.PositiveIntegerField(blank=True, default=10, null=True),
                ),
                (
                    "armor_class",
                    models.PositiveIntegerField(blank=True, default=10, null=True),
                ),
                ("initiative", models.IntegerField(blank=True, default=0, null=True)),
                (
                    "speed",
                    models.PositiveIntegerField(blank=True, default=30, null=True),
                ),
                (
                    "strength",
                    models.PositiveIntegerField(blank=True, default=10, null=True),
                ),
                (
                    "dexterity",
                    models.PositiveIntegerField(blank=True, default=10, null=True),
                ),
                (
                    "constitution",
                    models.PositiveIntegerField(blank=True, default=10, null=True),
                ),
                (
                    "intelligence",
                    models.PositiveIntegerField(blank=True, default=10, null=True),
                ),
                (
                    "wisdom",
                    models.PositiveIntegerField(blank=True, default=10, null=True),
                ),
                (
                    "charisma",
                    models.PositiveIntegerField(blank=True, default=10, null=True),
                ),
                ("saving_throw_strength", models.BooleanField(default=False)),
                ("saving_throw_dexterity", models.BooleanField(default=False)),
                ("saving_throw_constitution", models.BooleanField(default=False)),
                ("saving_throw_intelligence", models.BooleanField(default=False)),
                ("saving_throw_wisdom", models.BooleanField(default=False)),
                ("saving_throw_charisma", models.BooleanField(default=False)),
                ("spell_slots", models.JSONField(blank=True, default=dict, null=True)),
                ("spells_known", models.TextField(blank=True, null=True)),
                (
                    "primary_attack_name",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "primary_attack_type",
                    models.CharField(
                        blank=True,
                        choices=[("Melee", "Melee"), ("Ranged", "Ranged")],
                        max_length=20,
                        null=True,
                    ),
                ),
                (
                    "primary_attack_bonus",
                    models.IntegerField(blank=True, default=0, null=True),
                ),
                (
                    "primary_attack_damage",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
                (
                    "primary_attack_damage_type",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
                (
                    "secondary_attack_name",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "secondary_attack_type",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
                (
                    "secondary_attack_bonus",
                    models.IntegerField(blank=True, default=0, null=True),
                ),
                (
                    "secondary_attack_damage",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
                (
                    "secondary_attack_damage_type",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
                ("special_abilities", models.TextField(blank=True, null=True)),
                ("reactions", models.TextField(blank=True, null=True)),
                ("combat_role", models.CharField(blank=True, max_length=50, null=True)),
                (
                    "preferred_range",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
                (
                    "attack_priority",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                (
                    "escape_threshold",
                    models.PositiveIntegerField(blank=True, default=20, null=True),
                ),
                ("conditions", models.TextField(blank=True, null=True)),
                (
                    "temporary_hit_points",
                    models.PositiveIntegerField(blank=True, default=0, null=True),
                ),
                (
                    "ongoing_damage",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                (
                    "available_actions",
                    models.JSONField(blank=True, default=dict, null=True),
                ),
                (
                    "bonus_actions",
                    models.JSONField(blank=True, default=dict, null=True),
                ),
                ("finished", models.BooleanField(default=False, editable=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
    ]
